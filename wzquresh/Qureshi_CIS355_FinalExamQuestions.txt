1. What does LAMP stand for?
  a. Linux Apache MySQL PHP
  b. Lambert Apache MyPHP Python
  c. Linux Address MySQL PHP
  d. Linux Apache Mac PHP
  e. Linux Apple Mac PHP
  
2. How does Apache handle requests?
  a. It uses compiled extensions known as modules or handlers.
  b. It builds a server.
  c. It rewrites the request in C#.
  d. It builds a LAMP stack.
  e. It makes new ports.
  
3. Which of the following are true about PHP?
  a. It can be embedded within HTML.
  b. You cannot create objects and classes.
  c. It cannot ouput HTML.
  d. The PHP code for one HTML page must all be in one file.
  e. You have to specify the data types.
  
4. Which of the following are NOT valid comments in PHP?
  a. <?php . This is a comment?>
  b. <?php /*This is a comment*/?>
  c. <?php #This is a comment?>
  d. <?php //This is a comment?>
  e. <?php /*
        This is a comment
      */?>
      
5. What does the following code do?
  <?php
    $name = "Bill";
    $item = "Potato";
    $price = 3.50;
    $pdo = Database::connect();
    $sql = "INSERT INTO table (name, item, price) values ($name, $item, $price)";
    $q = $pdo->prepare($sql);
    $q->execute();
    Database::disconnect();
  ?>
  a. Adds a new row to the table.
  b. Outputs name, item, and price.
  c. Uses sql-injection to steal information from the database.
  d. Uses sqli to insert new data to the table.
  e. Outputs an error.
  
6. What is wrong with the following code?
  1 <?php
  2   $title="Hello";
  3   $message="Hello World";
  4   echo "<html><head><h1>" $title . "</h1></head>";
  5   echo "<body><h3>" . $message . "</h3></body>";
  6   echo "</html>";
  7 ?>
  a. Line 4 is missing a concatenation symbol.
  b. Line 5 does not need a semicolon.
  c. You cannot output contents of variables.
  d. String literals cannot be concatenated with variables.
  e. Line 7 should not have a question mark.
  
7. Which of the following is an incorrect way to create an array in PHP?
  a. <?php $arr = new array("This", "is", "an", "array");?>
  b. <?php $arr = array("This", "is", "an", "array");?>
  c. <?php $arr = ["This", "is", "an", "array"];?>
  d. <?php $arr = array();
        $arr[0] = "This";
        $arr[1] = "is";
        $arr[2] = "an";
        $arr[3] = "array";
     ?>
  e. <?php $arr = array("This"=>"This", "points"=>"is", "to"=>"an", "array"=>"array");?>
  
8. What is the benefit of an interface?
  a. It helps the developer design their class.
  b. It makes your code shorter.
  c. It does error checking.
  d. It implements private functions.
  e. It hides variables.
9. What will this SQL statement return from the following tables?
    Tables: User
              id  name
              1   Jones
              2   Billy
              3   Thomas
              4   Tina
              5   Jean
              6   Lilly
            Event
              id  userID  date  title
              1   2       2/3   event1
              2   5       2/5   event2
              3   6       3/6   event3
              4   5       4/2   event4
              5   3       5/8   event5
              6   1       1/2   event6
              7   4       3/4   event7
              8   5       8/12  event8
              9   1       9/1   event9
    
    SELECT User.name, Event.date, Event.title FROM User, Event WHERE User.id = Event.userID AND User.id < 3 ORDER BY User.id;
  a. Jones  1/2 event6
     Jones  9/1 event9
     Billy  2/3 event1
     
  b. Jones  9/1 event9
     Jones  1/2 event6
     Billy  2/3 event1
     
  c. Billy  2/3 event1
     Jones  1/2 event6
     Jones  9/1 event9
     
  d. Jones  1/2 event9
     Jones  9/1 event6
     Billy  2/3 event1
     
  e. Jones  1/2 event6
     Billy  2/3 event1
     
10. Using the tables above, which of the following SQL statements correctly returns all users and their events.
  a. SELECT User.name, Event.date, Event.title FROM User, Event WHERE User.id = Event.userID;
  b. SELECT * FROM Event INNER JOIN User ON id;
  c. SELECT User.id, Event.date, Event.title FROM User, Event WHERE User.name = Event.id;
  d. SELECT Event.userID, Event.date, Event.title FROM Event INNER JOIN User ON User.id;
  e. OUTPUT name, date, title FROM User AND Event;
  
11. What is wrong with the following code?
  1  require ("CRUD/database.php");
  2  session_start();
  3  $pdo = Database::connect();
	4	 $sql = 'SELECT * FROM Event ORDER BY id DESC';
  5  foreach ($pdo->query($sql) as $row) {
  6    echo $row['name'];
  7    echo $row['id'];
  8    echo $row['date'];
  9    echo $row['title'];
  10 }
  
  a. Line 6, the SQL does not include this data element.
  b. Line 5, The foreach loop cannot execute a query.
  c. Line 1, require should use single quotes.
  d. Line 3, it is not necessary to connect to the database.
  e. Line 2, The session should not be started here.
  
12. How do you add a line to the User table (Assume autoincrement is set)?
  a. INSERT INTO User('name') values('Bill');
  b. INSERT INTO User('id', 'name') values('11', 'Bill');
  c. ADD TO User ('name') value ('Bill');
  d. ADD User 'Bill';
  e. INCREMENT User values('Bill');
  
13. Which of the following statements is not using a Database API?
  a. $sql = 'SELECT * FROM customers ORDER BY id DESC';
  b. $pdo =  new PDO( "mysql:host=".$dbHost.";"."dbname=".$dbName, $dbUsername, $dbUserPassword);  
  c. $mysqli = new mysqli($dbHost, $dbName, $dbUserPassword, $dbUsername);
  d. $pdo->query($sql);
  e. $result = mysqli_query($mysqli, $sql);
  
14. In which situation would you use a regular expression?
  a. Determinging valid input format.
  b. Outputing a person's name.
  c. Returning data on an item in a database.
  d. Correcting an error in a string being inserted in a table.
  e. Searching for a specific string.
  
15. Which of the following correctly access the JSON object?
      {item:[
        {"name":"Bill", "id": 2, "school":"SVSU", "clubs":{1:"VR-DEV", 2:"ACM"}},
        {"name":"Jean", "id": 4, "school":"SVSU", "clubs":{1:"ACM"}},
        {"name":"Jon", "id": 6, "school":"SVSU", "clubs":{1:"ACM"}},
        {"name":"Tim", "id": 12, "school":"SVSU", "clubs":{1:"ACM"}},
        {"name":"River", "id": 30, "school":"SVSU", "clubs":{1:"ACM"}}
       ]}
       
  a. item->"clubs"->1
  b. item->"name"->2
  c. clubs->2
  d. "name"->"id"->"clubs"
  e. "id"->"clubs"->1